export PATH=$PATH:~/dev/build/navitia/release/ed

alias cddn="cd $HOME/dev/navitia"
alias cdda="cd $HOME/dev/asgard"
alias cddd="cd $HOME/dev/dataset"

#----------------------
# VPN
#----------------------
alias vpn_canaltp='sudo $HOME/dev/openconnect/openconnect --config=/home/bbrisset/.openconnect/kisio_openconnect portail-vpn.canaltp.fr'


#----------------------
# sshfs
#----------------------
navitia_mount_prod_bina(){
  if mount | grep $HOME/mount/prod-bina > /dev/null; then
    echo "~/mount/prod-bina mounted"
    echo "umount ~/mount/prod-bina"
    sudo umount -f $HOME/mount/prod-bina
  fi
  echo "run sshfs for ~/mount/prod-bina"
  sshfs -o reconnect,ServerAliveInterval=15,ServerAliveCountMax=3 root@prod-bina:/srv/ed/backup $HOME/mount/prod-bina
}
navitia_unmount_prod_bina(){
  if mount | grep $HOME/mount/prod-bina > /dev/null; then
    echo "~/mount/prod-bina mounted"
    echo "umount ~/mount/prod-bina"
    sudo umount -f $HOME/mount/prod-bina
  fi
}

#----------------------
# bbst docker
#----------------------
alias navitia_run_docker='docker run --network="host" -it --rm --user=$(id -u):$(id -g) -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/dev:/$HOME/dev -v /tmp/:/tmp_ipc -w $HOME docker_navitia_dev bash'
alias navitia_build_docker='cd $HOME/dev/dotfiles/roles/docker/files/docker_navitia_dev && ./make_docker && cd -'

#----------------------
# asgard docker
#----------------------
alias asgard_build_docker='cd $HOME/dev/dotfiles/roles/docker/files/docker_asgard_dev && ./make_docker && cd -'
alias asgard_run_docker='docker run --network="host" -it --rm --user=$(id -u):$(id -g) -v $HOME/dev:/$HOME/dev -w $HOME docker_asgard_dev bash'

#----------------------
# navitia docker
#----------------------
alias navitia_docker_debian_8='docker run -it --rm --user=$(id -u):$(id -g) -v $HOME/dev/dotfiles/roles/docker/files/.bashrc:/.bashrc -v $HOME/dev/run:/navitia_run -v $HOME/dev/build/navitia_docker:/build -v $HOME/dev/navitia:/navitia -w /build navitia/debian8_dev bash'
alias navitia_docker_debian_9='docker run -it --rm --user=$(id -u):$(id -g) -v $HOME/dev/dotfiles/roles/docker/files/.bashrc:/.bashrc -v $HOME/dev/run:/navitia_run -v $HOME/dev/build/navitia_docker:/build -v $HOME/dev/navitia:/navitia -w /navitia navitia/debian9_dev bash'
alias navitia_docker_debian_10='docker run -it --rm --user=$(id -u):$(id -g) -v $HOME/dev/dotfiles/roles/docker/files/.bashrc:/.bashrc -v $HOME/dev/run:/navitia_run -v $HOME/dev/build/navitia_docker:/build -v $HOME/dev/navitia:/navitia -w /navitia navitia/debian10_dev bash'
alias navitia_docker_ubuntu_18='docker run -it --rm --user=$(id -u):$(id -g) -v $HOME/dev/dotfiles/roles/docker/files/.bashrc:/.bashrc -v $HOME/dev/run:/navitia_run -v $HOME/dev/build/navitia_docker:/build -v $HOME/dev/navitia:/navitia -w /navitia navitia/ubuntu18_dev bash'

#----------------------
# Artemis
#----------------------
alias artemis_virt='source $HOME/dev/virtualenv/virtualenv-artemis/bin/activate'
alias artemis_up='cd $HOME/dev/navitia-docker-compose && docker-compose -f docker-compose.yml -f artemis/docker-artemis-instance.yml -f kirin/docker-compose_kirin.yml up'
alias artemis_dowm='cd $HOME/dev/navitia-docker-compose && docker-compose -f docker-compose.yml -f artemis/docker-artemis-instance.yml -f kirin/docker-compose_kirin.yml down -v && cd -'
alias artemis_up_without_kirin='cd $HOME/dev/navitia-docker-compose && docker-compose -f docker-compose.yml -f artemis/docker-artemis-instance.yml up'
alias artemis_dowm_without_kirin='cd $HOME/dev/navitia-docker-compose && docker-compose -f docker-compose.yml -f artemis/docker-artemis-instance.yml down -v && cd -'

#----------------------
# Kirin
#----------------------
alias kirin_config='cd $HOME/dev/run/kirin && vim default.json'
alias kirin_virt='source $HOME/dev/virtualenv/virtualenv-kirin/bin/activate'
alias kirin_run='cd $HOME/dev/kirin && ./manage.py runserver -p 5001'
alias kirin_queue_service='cd $HOME/dev/kirin && KIRIN_USE_GEVENT=true ./manage.py load_realtime'
alias kirin_test='source $HOME/dev/virtualenv/virtualenv-kirin/bin/activate && cd $HOME/dev/kirin && KIRIN_CONFIG_FILE=test_settings.py py.test tests && deactivate && cd -'

#----------------------
# Bragi
#----------------------
alias bragi_run='cd $HOME/dev/mimirsbrunn/target/release && ./bragi --connection-string=http://localhost:9200/munin'
alias elastic_run='cd $HOME/soft/elasticsearch-2.4.1/bin && ./elasticsearch'
alias kibana_run='cd $HOME/soft/kibana-4.6.0-linux-x86_64/bin && ./kibana'

#----------------------
# Jormun
#----------------------
alias jormun_config='cd $HOME/dev/run/jormungandr && vim default.json'
alias jormun_virt='source $HOME/dev/virtualenv/virtualenv-jor/bin/activate'
alias jormun_run='cd $HOME/dev/navitia/source/jormungandr && PYTHONPATH=.:../navitiacommon JORMUNGANDR_CONFIG_FILE=$HOME/dev/navitia/source/jormungandr/jormungandr/dev_settings.py JORMUNGANDR_INSTANCES_DIR=$HOME/dev/run/jormungandr JORMUNGANDR_USE_SERPY=True FLASK_APP=jormungandr:app flask run'
alias jormun_test='source $HOME/dev/virtualenv/virtualenv-jor/bin/activate && cd $HOME/dev/navitia/source/jormungandr && PYTHONPATH=.:../navitiacommon KRAKEN_BUILD_DIR=$HOME/dev/build/navitia/release py.test tests && deactivate && cd -'

#----------------------
# Eitry
#----------------------
alias eitri_virt='source $HOME/dev/virtualenv/virtualenv-eitri/bin/activate'

eitri_run(){
  source $HOME/dev/virtualenv/virtualenv-eitri/bin/activate
  cd $HOME/dev/navitia/source/eitri
  PYTHONPATH=.:../navitiacommon python2.7 eitri.py -d $1 -e $HOME/dev/build/navitia/release/ed
  deactivate
  cd -
}

#----------------------
# Tyr
#----------------------
alias tyr_virt='source $HOME/dev/virtualenv/virtualenv-tyr/bin/activate'
alias tyr_upgrade='cd $HOME/dev/navitia/source/tyr && PYTHONPATH=.:../navitiacommon TYR_CONFIG_FILE=$HOME/dev/run/tyr/tyr_settings.py python manage_tyr.py db upgrade'
alias tyr_run_flask='cd $HOME/dev/navitia/source/tyr && PYTHONPATH=.:../navitiacommon TYR_CONFIG_FILE=$HOME/dev/run/tyr/tyr_settings.py python manage_tyr.py runserver'
alias tyr_run_task='cd $HOME/dev/navitia/source/tyr && PYTHONPATH=.:../navitiacommon TYR_CONFIG_FILE=$HOME/dev/run/tyr/tyr_settings.py celery worker -A tyr.tasks'
alias tyr_run_beat='cd $HOME/dev/navitia/source/tyr && PYTHONPATH=.:../navitiacommon TYR_CONFIG_FILE=$HOME/dev/run/tyr/tyr_settings.py celery beat -A tyr.tasks'
alias tyr_tests_r='source $HOME/dev/virtualenv/virtualenv-tyr/bin/activate && cd $HOME/dev/build/navitia/release && make docker_test && deactivate && cd -'
alias tyr_tests_d='source $HOME/dev/virtualenv/virtualenv-tyr/bin/activate && cd $HOME/dev/build/navitia/debug && make docker_test && deactivate && cd -'

#----------------------
# Kraken
#----------------------
alias kraken_cmake_r='cd $HOME/dev/build/navitia/release && cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ../../../navitia/source && cd -'
alias kraken_cmake_r_clang='cd $HOME/dev/build/navitia/release && cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_C_COMPILER="/usr/bin/clang-8" -DCMAKE_CXX_COMPILER="/usr/bin/clang++-8" ../../../navitia/source && cd -'
alias kraken_cmake_d='cd $HOME/dev/build/navitia/debug && cmake -DCMAKE_BUILD_TYPE=DEBUG ../../../navitia/source && cd -'
alias kraken_make_r='cd $HOME/dev/build/navitia/release && make -j5 && cd -'
alias kraken_make_d='cd $HOME/dev/build/navitia/debug && make -j5 && cd -'
alias kraken_all_r='kraken_cmake_r && kraken_make_r'
alias kraken_all_d='kraken_cmake_d && kraken_make_d'
alias kraken_run_r='cd $HOME/dev/run/kraken/krakenRelease && ./kraken ../kraken.ini'
alias kraken_run_d='cd $HOME/dev/run/kraken/krakenDebug && gdb --args ./kraken ../kraken.ini'
alias kraken_config='cd $HOME/dev/run/kraken && vim kraken.ini'

#----------------------
# Navitia
#----------------------
alias navitia_release_virt='source $HOME/dev/virtualenv/virtualenv-release/bin/activate'
alias navitia_tests_r='source $HOME/dev/virtualenv/virtualenv-jor/bin/activate && cd $HOME/dev/build/navitia/release && make test && deactivate && cd -'
alias navitia_tests_d='source $HOME/dev/virtualenv/virtualenv-jor/bin/activate && cd $HOME/dev/build/navitia/debug && make test && deactivate && cd -'
alias navitia_docker_tests_r='source $HOME/dev/virtualenv/virtualenv-tyr/bin/activate && cd $HOME/dev/build/navitia/release && make docker_test && deactivate && cd -'
alias navitia_docker_tests_d='source $HOME/dev/virtualenv/virtualenv-tyr/bin/activate && cd $HOME/dev/build/navitia/debug && make docker_test && deactivate && cd -'

navitia_request(){
  curl "$1" -H 'Authorization: fc4b8d9e-ca2e-487f-9c04-c81fc9d2a781' > debug.json
  cat debug.json | python -m json.tool > navitia_response.json
  rm -f debug.json
}

